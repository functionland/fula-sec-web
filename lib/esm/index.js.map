{
  "version": 3,
  "sources": ["../../node_modules/@stablelib/hash/hash.ts", "../../node_modules/@stablelib/constant-time/constant-time.ts", "../../node_modules/@stablelib/wipe/wipe.ts", "../../node_modules/@stablelib/hmac/hmac.ts", "../../node_modules/@stablelib/int/int.ts", "../../node_modules/@stablelib/binary/binary.ts", "../../node_modules/@stablelib/sha512/sha512.ts", "../../node_modules/js-sha3/src/sha3.js", "../../src/did/hkey/key.ts", "../../node_modules/@stablelib/ed25519/node_modules/@stablelib/random/source/system.ts", "../../node_modules/@stablelib/ed25519/node_modules/@stablelib/int/int.ts", "../../node_modules/@stablelib/ed25519/node_modules/@stablelib/binary/binary.ts", "../../node_modules/@stablelib/ed25519/node_modules/@stablelib/wipe/wipe.ts", "../../node_modules/@stablelib/ed25519/node_modules/@stablelib/random/random.ts", "../../node_modules/@stablelib/ed25519/node_modules/@stablelib/sha512/sha512.ts", "../../node_modules/@stablelib/ed25519/ed25519.ts", "../../src/did/hkey/utils/utils.ts", "../../node_modules/uint8arrays/esm/src/util/as-uint8array.js", "../../node_modules/uint8arrays/esm/src/alloc.js", "../../node_modules/multiformats/esm/src/bases/identity.js", "../../node_modules/multiformats/esm/vendor/base-x.js", "../../node_modules/multiformats/esm/src/bytes.js", "../../node_modules/multiformats/esm/src/bases/base.js", "../../node_modules/multiformats/esm/src/bases/base2.js", "../../node_modules/multiformats/esm/src/bases/base8.js", "../../node_modules/multiformats/esm/src/bases/base10.js", "../../node_modules/multiformats/esm/src/bases/base16.js", "../../node_modules/multiformats/esm/src/bases/base32.js", "../../node_modules/multiformats/esm/src/bases/base36.js", "../../node_modules/multiformats/esm/src/bases/base58.js", "../../node_modules/multiformats/esm/src/bases/base64.js", "../../node_modules/multiformats/esm/src/bases/base256emoji.js", "../../node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../../node_modules/multiformats/esm/vendor/varint.js", "../../node_modules/multiformats/esm/src/varint.js", "../../node_modules/multiformats/esm/src/hashes/digest.js", "../../node_modules/multiformats/esm/src/hashes/hasher.js", "../../node_modules/multiformats/esm/src/hashes/identity.js", "../../node_modules/multiformats/esm/src/codecs/json.js", "../../node_modules/multiformats/esm/src/cid.js", "../../node_modules/multiformats/esm/src/basics.js", "../../node_modules/uint8arrays/esm/src/util/bases.js", "../../node_modules/uint8arrays/esm/src/from-string.js", "../../node_modules/uint8arrays/esm/src/to-string.js", "../../src/utils/u8a.multiformats.ts", "../../src/did/hkey/keyPair/base.ts", "../../src/did/hkey/keyPair/ed25519.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, "/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n", "import { HMAC } from '@stablelib/hmac';\r\nimport { SHA512 } from '@stablelib/sha512';\r\nimport { extractPublicKeyFromSecretKey, sign } from '@stablelib/ed25519';\r\nimport { replaceDerive, pathRegex } from './utils/utils.js';\r\nimport { stringToBytes, bytesToBase64url } from '../../utils/u8a.multiformats';\r\nimport * as EdKey from './keyPair/ed25519.js';\r\nimport * as u8a from 'uint8arrays';\r\nimport sha3 from 'js-sha3';\r\nimport { Signer } from 'did-jwt';\r\n\r\ntype Hex = string;\r\ntype Path = string;\r\n\r\ntype Keys = {\r\n  key: Uint8Array;\r\n  chainCode: Uint8Array;\r\n};\r\n\r\nexport type exportKeyPair = {\r\n  publicKey: string,\r\n  secretKey: string\r\n};\r\n\r\nconst ED25519_CURVE = 'ed25519 seed';\r\nconst HARDENED_OFFSET = 0x80000000;\r\n\r\nexport class HDKEY {\r\n  private _Key!: Keys;\r\n  private _secretKey!: Uint8Array;\r\n  chainCode: string;\r\n\r\n  constructor(password: string) {\r\n    this.chainCode = this._splitKey(password);\r\n  }\r\n\r\n  private _splitKey(password: string) {\r\n    const hexSeed = sha3.keccak256(password);\r\n    const hmac = new HMAC(SHA512, u8a.fromString(ED25519_CURVE));\r\n    const secretKey = hmac.update(u8a.fromString(hexSeed, 'hex')).digest();\r\n    const IL = secretKey.slice(0, 32);\r\n    const IR = secretKey.slice(32);\r\n    const key = IL;\r\n    const chainCode = IR;\r\n    this._Key = {\r\n      key,\r\n      chainCode\r\n    };\r\n    return u8a.toString(this._Key.chainCode, 'base64pad');\r\n  }\r\n\r\n  getEd25519Signer(): Signer {\r\n    const privateKeyByte: Uint8Array = this._secretKey;\r\n    if (privateKeyByte.length !== 64) {\r\n      throw new Error(`Invalid key format. Key bytes length must be 64, but got ${privateKeyByte.length}`);\r\n    }\r\n    return async (data: string | Uint8Array): Promise<string> => {\r\n      const dataBytes: Uint8Array = typeof data === 'string' ? stringToBytes(data) : data;\r\n      const sig: Uint8Array = sign(privateKeyByte, dataBytes);\r\n      return bytesToBase64url(sig);\r\n    };\r\n  }\r\n\r\n  createEDKeyPair(signedKey: Hex): EdKey.EdKeypair {\r\n    const key = u8a.toString(this._Key.key, 'base64pad');\r\n    const hexSeed = sha3.keccak256(key.concat(signedKey));\r\n    const hmac = new HMAC(SHA512, u8a.fromString(ED25519_CURVE));\r\n    const secretKey = hmac.update(u8a.fromString(hexSeed, 'hex')).digest();\r\n    this._secretKey = secretKey;\r\n    return EdKey.EdKeypair.fromSecretKey(u8a.toString(this._secretKey, 'base64pad'));\r\n  }\r\n\r\n  exportEDKeyPair(secretKey?: Uint8Array): exportKeyPair {\r\n    const publicKey = extractPublicKeyFromSecretKey(secretKey || this._secretKey);\r\n    return {\r\n      publicKey: u8a.toString(publicKey, 'base64pad'),\r\n      secretKey: u8a.toString(secretKey || this._secretKey, 'base64pad')\r\n    };\r\n  }\r\n\r\n  private _extendPrivateKey({ key, chainCode }: Keys, index: number): Keys {\r\n    const indexBuffer = new Uint8Array(4);\r\n    new DataView(indexBuffer.buffer).setUint32(0, index);\r\n    const data = new Uint8Array([0, ...key, ...indexBuffer]);\r\n    const I = new HMAC(SHA512, chainCode).update(data).digest();\r\n    const IL = I.slice(0, 32);\r\n    const IR = I.slice(32);\r\n    return {\r\n      key: IL,\r\n      chainCode: IR\r\n    };\r\n  }\r\n\r\n  isValidPath(path: string): boolean {\r\n    if (!pathRegex.test(path)) {\r\n      return false;\r\n    }\r\n    return !path.split('/').slice(1).map(replaceDerive).some(isNaN as any);\r\n  }\r\n\r\n  private _deriveKeyPath(path: Path, offset = HARDENED_OFFSET): Keys {\r\n    if (!this.isValidPath(path)) {\r\n      throw new Error('Invalid derivation path');\r\n    }\r\n\r\n    const { key, chainCode } = this._Key;\r\n    const segments = path.split('/').slice(1).map(replaceDerive).map(el => parseInt(el, 10));\r\n\r\n    return segments.reduce((parentKeys, segment) => this._extendPrivateKey(parentKeys, segment + offset), { key, chainCode });\r\n  }\r\n\r\n  deriveKeyPath(path: Path, offset = HARDENED_OFFSET): EdKey.EdKeypair {\r\n    const { key, chainCode } = this._deriveKeyPath(path, offset);\r\n    const secretKey = new Uint8Array([...key, ...chainCode]);\r\n    return EdKey.EdKeypair.fromSecretKey(u8a.toString(secretKey, 'base64pad'));\r\n  }\r\n\r\n  exportKeyPath(path: Path, offset = HARDENED_OFFSET): exportKeyPair {\r\n    const { key, chainCode } = this._deriveKeyPath(path, offset);\r\n    const secretKey = new Uint8Array([...key, ...chainCode]);\r\n    const publicKey = extractPublicKeyFromSecretKey(secretKey);\r\n    return {\r\n      publicKey: u8a.toString(publicKey, 'base64pad'),\r\n      secretKey: u8a.toString(secretKey, 'base64pad')\r\n    };\r\n  }\r\n}\r\n", null, null, null, null, null, null, null, "export const pathRegex = new RegExp(\"^m(\\\\/[0-9]+')+$\");\r\n\r\nexport const replaceDerive = (val: string): string => val.replace(\"'\", '');\r\n", "export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}", "import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}", "import * as u8a from 'uint8arrays';\r\n\r\n/**\r\n * @deprecated Signers will be expected to return base64url `string` signatures.\r\n */\r\nexport interface EcdsaSignature {\r\n  r: string;\r\n  s: string;\r\n  recoveryParam?: number | null;\r\n}\r\n\r\nexport function stringHexToU8a(string: string): Uint8Array {\r\n  return new Uint8Array(Buffer.from(string, 'hex'));\r\n}\r\n\r\nexport function bytesToBase64url(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64url');\r\n}\r\n\r\nexport function base64ToBytes(s: string): Uint8Array {\r\n  const inputBase64Url = s.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\r\n  return u8a.fromString(inputBase64Url, 'base64url');\r\n}\r\n\r\nexport function bytesToBase64(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base64pad');\r\n}\r\n\r\nexport function base58ToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s, 'base58btc');\r\n}\r\n\r\nexport function bytesToBase58(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base58btc');\r\n}\r\n\r\nexport function hexToBytes(s: string): Uint8Array {\r\n  const input = s.startsWith('0x') ? s.substring(2) : s;\r\n  return u8a.fromString(input.toLowerCase(), 'base16');\r\n}\r\n\r\nexport function encodeBase64url(s: string): string {\r\n  return bytesToBase64url(u8a.fromString(s));\r\n}\r\n\r\nexport function decodeBase64url(s: string): string {\r\n  return u8a.toString(base64ToBytes(s));\r\n}\r\n\r\nexport function bytesToHex(b: Uint8Array): string {\r\n  return u8a.toString(b, 'base16');\r\n}\r\n\r\nexport function stringToBytes(s: string): Uint8Array {\r\n  return u8a.fromString(s);\r\n}\r\n\r\nexport function bytesToString(b: Uint8Array): string {\r\n  return u8a.toString(b);\r\n}\r\n\r\nexport function toJose({ r, s, recoveryParam }: EcdsaSignature, recoverable?: boolean): string {\r\n  const jose = new Uint8Array(recoverable ? 65 : 64);\r\n  jose.set(u8a.fromString(r, 'base16'), 0);\r\n  jose.set(u8a.fromString(s, 'base16'), 32);\r\n  if (recoverable) {\r\n    if (typeof recoveryParam === 'undefined') {\r\n      throw new Error('Signer did not return a recoveryParam');\r\n    }\r\n    jose[64] = <number>recoveryParam;\r\n  }\r\n  return bytesToBase64url(jose);\r\n}\r\n\r\nexport function fromJose(signature: string): { r: string; s: string; recoveryParam?: number } {\r\n  const signatureBytes: Uint8Array = base64ToBytes(signature);\r\n  if (signatureBytes.length < 64 || signatureBytes.length > 65) {\r\n    throw new TypeError(`Wrong size for signature. Expected 64 or 65 bytes, but got ${signatureBytes.length}`);\r\n  }\r\n  const r = bytesToHex(signatureBytes.slice(0, 32));\r\n  const s = bytesToHex(signatureBytes.slice(32, 64));\r\n  const recoveryParam = signatureBytes.length === 65 ? signatureBytes[64] : undefined;\r\n  return { r, s, recoveryParam };\r\n}\r\n\r\nexport function toSealed(ciphertext: string, tag: string): Uint8Array {\r\n  return u8a.concat([base64ToBytes(ciphertext), base64ToBytes(tag)]);\r\n}\r\n\r\nexport function leftpad(data: string, size = 64): string {\r\n  if (data.length === size) return data;\r\n  return '0'.repeat(size - data.length) + data;\r\n}\r\n", "import * as uint8arrays from 'uint8arrays';\r\nimport { Keypair, KeyType, Encodings, ExportableKey } from './types.js';\r\n\r\nexport default abstract class BaseKeypair implements Keypair, ExportableKey {\r\n  publicKey: Uint8Array;\r\n  keyType: KeyType;\r\n  exportable: boolean;\r\n\r\n  constructor(publicKey: Uint8Array, keyType: KeyType, exportable: boolean) {\r\n    this.publicKey = publicKey;\r\n    this.keyType = keyType;\r\n    this.exportable = exportable;\r\n  }\r\n\r\n  publicKeyStr(encoding: Encodings = 'base64pad'): string {\r\n    return uint8arrays.toString(this.publicKey, encoding);\r\n  }\r\n\r\n  abstract sign(msg: Uint8Array): Promise<Uint8Array>;\r\n  abstract export(): Promise<string>;\r\n}\r\n", "import * as ed25519 from '@stablelib/ed25519';\r\nimport * as uint8arrays from 'uint8arrays';\r\nimport BaseKeypair from './base.js';\r\nimport { Encodings } from './types.js';\r\n\r\nexport class EdKeypair extends BaseKeypair {\r\n  secretKey: Uint8Array;\r\n  publicKey: Uint8Array;\r\n\r\n  constructor(secretKey: Uint8Array, publicKey: Uint8Array, exportable: boolean) {\r\n    super(publicKey, 'ed25519', exportable);\r\n    this.secretKey = secretKey;\r\n    this.publicKey = publicKey;\r\n  }\r\n\r\n  static async create(params?: { exportable: boolean }): Promise<EdKeypair> {\r\n    const { exportable } = params || {};\r\n    const keypair = ed25519.generateKeyPair();\r\n    return new EdKeypair(keypair.secretKey, keypair.publicKey, exportable ?? false);\r\n  }\r\n\r\n  static fromSecretKey(key: string, params?: { format?: Encodings, exportable?: boolean }): EdKeypair {\r\n    const { format = 'base64pad', exportable = false } = params || {};\r\n    const secretKey = uint8arrays.fromString(key, format);\r\n    const publicKey = ed25519.extractPublicKeyFromSecretKey(secretKey);\r\n    return new EdKeypair(secretKey, publicKey, exportable);\r\n  }\r\n\r\n  async sign(msg: Uint8Array): Promise<Uint8Array> {\r\n    return ed25519.sign(this.secretKey, msg);\r\n  }\r\n\r\n  async export(format: Encodings = 'base64pad'): Promise<string> {\r\n    if (!this.exportable) {\r\n      throw new Error('Key is not exportable');\r\n    }\r\n    return uint8arrays.toString(this.secretKey, format);\r\n  }\r\n}\r\n\r\nexport default EdKeypair;\r\n"],
  "mappings": "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I,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,QAAM,IAAI;AACV,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,MAAI,EAAE;AACN,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AACX,SAAO,IAAI;AAEX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,QAAM,KAAK;AACX,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AACZ,SAAO,KAAK;AAIZ,MAAI;AACJ,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,QAAM,IAAI,IAAI,MAAM,IAAI;AAGxB,MAAI;AACJ,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,KAAK,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,OAAK,IAAI,IAAI;AAC5D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,MAAI,MAAM,IAAI;AAAO,MAAI,KAAK,MAAM,IAAI,KAAK;AAAG,QAAM,IAAI,IAAI;AAC9D,QAAM,IAAI,IAAI,MAAM,IAAI;AAExB,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,KAAK;AACP,IAAE,MAAM;AACR,IAAE,MAAM;AACR,IAAE,MAAM;AACR,IAAE,MAAM;AACR,IAAE,MAAM;AACR,IAAE,MAAM;AACZ;AAEA,SAAS,OAAO,GAAO,GAAK;AACxB,MAAI,GAAG,GAAG,CAAC;AACf;AAEA,SAAS,SAAS,GAAO,GAAK;AAC1B,QAAM,IAAI,GAAE;AACZ,MAAI;AACJ,OAAK,IAAI,GAAG,IAAI,IAAI,KAAK;AACrB,MAAE,KAAK,EAAE;EACb;AACA,OAAK,IAAI,KAAK,KAAK,GAAG,KAAK;AACvB,WAAO,GAAG,CAAC;AACX,QAAI,MAAM,KAAK,MAAM,GAAG;AACpB,UAAI,GAAG,GAAG,CAAC;IACf;EACJ;AACA,OAAK,IAAI,GAAG,IAAI,IAAI,KAAK;AACrB,MAAE,KAAK,EAAE;EACb;AACJ;AAoBA,SAAS,MAAM,GAAS,GAAO;AAC3B,QAAM,IAAI,GAAE,GAAI,IAAI,GAAE,GAAI,IAAI,GAAE,GAC5B,IAAI,GAAE,GAAI,IAAI,GAAE,GAAI,IAAI,GAAE,GAC1B,IAAI,GAAE,GAAI,IAAI,GAAE,GAAI,IAAI,GAAE;AAE9B,MAAI,GAAG,EAAE,IAAI,EAAE,EAAE;AACjB,MAAI,GAAG,EAAE,IAAI,EAAE,EAAE;AACjB,MAAI,GAAG,GAAG,CAAC;AACX,MAAI,GAAG,EAAE,IAAI,EAAE,EAAE;AACjB,MAAI,GAAG,EAAE,IAAI,EAAE,EAAE;AACjB,MAAI,GAAG,GAAG,CAAC;AACX,MAAI,GAAG,EAAE,IAAI,EAAE,EAAE;AACjB,MAAI,GAAG,GAAG,EAAE;AACZ,MAAI,GAAG,EAAE,IAAI,EAAE,EAAE;AACjB,MAAI,GAAG,GAAG,CAAC;AACX,MAAI,GAAG,GAAG,CAAC;AACX,MAAI,GAAG,GAAG,CAAC;AACX,MAAI,GAAG,GAAG,CAAC;AACX,MAAI,GAAG,GAAG,CAAC;AAEX,MAAI,EAAE,IAAI,GAAG,CAAC;AACd,MAAI,EAAE,IAAI,GAAG,CAAC;AACd,MAAI,EAAE,IAAI,GAAG,CAAC;AACd,MAAI,EAAE,IAAI,GAAG,CAAC;AAClB;AAEA,SAAS,MAAM,GAAS,GAAS,GAAS;AACtC,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,aAAS,EAAE,IAAI,EAAE,IAAI,CAAC;EAC1B;AACJ;AAEA,SAAS,KAAK,GAAe,GAAO;AAChC,QAAM,KAAK,GAAE,GAAI,KAAK,GAAE,GAAI,KAAK,GAAE;AACnC,WAAS,IAAI,EAAE,EAAE;AACjB,MAAI,IAAI,EAAE,IAAI,EAAE;AAChB,MAAI,IAAI,EAAE,IAAI,EAAE;AAChB,YAAU,GAAG,EAAE;AACf,IAAE,OAAO,SAAS,EAAE,KAAK;AAC7B;AAEA,SAAS,WAAW,GAAS,GAAS,GAAa;AAC/C,WAAS,EAAE,IAAI,GAAG;AAClB,WAAS,EAAE,IAAI,GAAG;AAClB,WAAS,EAAE,IAAI,GAAG;AAClB,WAAS,EAAE,IAAI,GAAG;AAClB,WAAS,IAAI,KAAK,KAAK,GAAG,EAAE,GAAG;AAC3B,UAAM,IAAK,EAAG,IAAI,IAAK,OAAO,IAAI,KAAM;AACxC,UAAM,GAAG,GAAG,CAAC;AACb,UAAM,GAAG,CAAC;AACV,UAAM,GAAG,CAAC;AACV,UAAM,GAAG,GAAG,CAAC;EACjB;AACJ;AAEA,SAAS,WAAW,GAAS,GAAa;AACtC,QAAM,IAAI,CAAC,GAAE,GAAI,GAAE,GAAI,GAAE,GAAI,GAAE,CAAE;AACjC,WAAS,EAAE,IAAI,CAAC;AAChB,WAAS,EAAE,IAAI,CAAC;AAChB,WAAS,EAAE,IAAI,GAAG;AAClB,MAAI,EAAE,IAAI,GAAG,CAAC;AACd,aAAW,GAAG,GAAG,CAAC;AACtB;AAQM,SAAU,wBAAwB,MAAgB;AACpD,MAAI,KAAK,WAAW,aAAa;AAC7B,UAAM,IAAI,MAAM,yBAAyB,mBAAmB;EAChE;AAEA,QAAM,IAAI,KAAK,IAAI;AACnB,IAAE,MAAM;AACR,IAAE,OAAO;AACT,IAAE,OAAO;AAET,QAAM,YAAY,IAAI,WAAW,EAAE;AACnC,QAAM,IAAI,CAAC,GAAE,GAAI,GAAE,GAAI,GAAE,GAAI,GAAE,CAAE;AACjC,aAAW,GAAG,CAAC;AACf,OAAK,WAAW,CAAC;AAEjB,QAAM,YAAY,IAAI,WAAW,EAAE;AACnC,YAAU,IAAI,IAAI;AAClB,YAAU,IAAI,WAAW,EAAE;AAE3B,SAAO;IACH;IACA;;AAER;AAEM,SAAU,gBAAgB,MAAmB;AAC/C,QAAM,OAAO,YAAY,IAAI,IAAI;AACjC,QAAM,SAAS,wBAAwB,IAAI;AAC3C,OAAK,IAAI;AACT,SAAO;AACX;AAEM,SAAU,8BAA8B,WAAqB;AAC/D,MAAI,UAAU,WAAW,mBAAmB;AACxC,UAAM,IAAI,MAAM,+BAA+B,yBAAyB;EAC5E;AACA,SAAO,IAAI,WAAW,UAAU,SAAS,EAAE,CAAC;AAChD;AAEA,IAAM,IAAI,IAAI,aAAa;EACvB;EAAM;EAAM;EAAM;EAAM;EAAM;EAAM;EAAM;EAAM;EAAM;EAAM;EAAM;EAClE;EAAM;EAAM;EAAM;EAAM;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;EAAG;CACxE;AAED,SAAS,KAAK,GAAe,GAAe;AACxC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,OAAK,IAAI,IAAI,KAAK,IAAI,EAAE,GAAG;AACvB,YAAQ;AACR,SAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG;AACrC,QAAE,MAAM,QAAQ,KAAK,EAAE,KAAK,EAAE,KAAK,IAAI;AACvC,cAAQ,KAAK,OAAO,EAAE,KAAK,OAAO,GAAG;AACrC,QAAE,MAAM,QAAQ;IACpB;AACA,MAAE,MAAM;AACR,MAAE,KAAK;EACX;AACA,UAAQ;AACR,OAAK,IAAI,GAAG,IAAI,IAAI,KAAK;AACrB,MAAE,MAAM,SAAS,EAAE,OAAO,KAAK,EAAE;AACjC,YAAQ,EAAE,MAAM;AAChB,MAAE,MAAM;EACZ;AACA,OAAK,IAAI,GAAG,IAAI,IAAI,KAAK;AACrB,MAAE,MAAM,QAAQ,EAAE;EACtB;AACA,OAAK,IAAI,GAAG,IAAI,IAAI,KAAK;AACrB,MAAE,IAAI,MAAM,EAAE,MAAM;AACpB,MAAE,KAAK,EAAE,KAAK;EAClB;AACJ;AAEA,SAAS,OAAO,GAAa;AACzB,QAAM,IAAI,IAAI,aAAa,EAAE;AAC7B,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,MAAE,KAAK,EAAE;EACb;AACA,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,MAAE,KAAK;EACX;AACA,OAAK,GAAG,CAAC;AACb;AAGM,SAAU,KAAK,WAAuB,SAAmB;AAC3D,QAAM,IAAI,IAAI,aAAa,EAAE;AAC7B,QAAM,IAAI,CAAC,GAAE,GAAI,GAAE,GAAI,GAAE,GAAI,GAAE,CAAE;AAEjC,QAAM,IAAI,KAAK,UAAU,SAAS,GAAG,EAAE,CAAC;AACxC,IAAE,MAAM;AACR,IAAE,OAAO;AACT,IAAE,OAAO;AAET,QAAM,YAAY,IAAI,WAAW,EAAE;AACnC,YAAU,IAAI,EAAE,SAAS,EAAE,GAAG,EAAE;AAEhC,QAAM,KAAK,IAAI,OAAM;AACrB,KAAG,OAAO,UAAU,SAAS,EAAE,CAAC;AAChC,KAAG,OAAO,OAAO;AACjB,QAAM,IAAI,GAAG,OAAM;AACnB,KAAG,MAAK;AACR,SAAO,CAAC;AACR,aAAW,GAAG,CAAC;AACf,OAAK,WAAW,CAAC;AAEjB,KAAG,MAAK;AACR,KAAG,OAAO,UAAU,SAAS,GAAG,EAAE,CAAC;AACnC,KAAG,OAAO,UAAU,SAAS,EAAE,CAAC;AAChC,KAAG,OAAO,OAAO;AACjB,QAAM,IAAI,GAAG,OAAM;AACnB,SAAO,CAAC;AAER,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,MAAE,KAAK,EAAE;EACb;AACA,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,aAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,QAAE,IAAI,MAAM,EAAE,KAAK,EAAE;IACzB;EACJ;AACA,OAAK,UAAU,SAAS,EAAE,GAAG,CAAC;AAE9B,SAAO;AACX;;;AC3wBO,IAAM,YAAY,IAAI,OAAO,kBAAkB;AAE/C,IAAM,gBAAgB,CAAC,QAAwB,IAAI,QAAQ,KAAK,EAAE;;;ACFlE,SAAS,aAAa,KAAK;AAChC,MAAI,WAAW,UAAU,MAAM;AAC7B,WAAO,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAAA,EAClE;AACA,SAAO;AACT;;;ACEO,SAAS,YAAY,OAAO,GAAG;AACpC,MAAI,WAAW,UAAU,QAAQ,WAAW,OAAO,eAAe,MAAM;AACtE,WAAO,aAAa,WAAW,OAAO,YAAY,IAAI,CAAC;AAAA,EACzD;AACA,SAAO,IAAI,WAAW,IAAI;AAC5B;;;ACZA;AAAA;AAAA;AAAA;;;ACAA,SAAS,KAAK,UAAUC,OAAM;AAC5B,MAAI,SAAS,UAAU,KAAK;AAC1B,UAAM,IAAI,UAAU,mBAAmB;AAAA,EACzC;AACA,MAAI,WAAW,IAAI,WAAW,GAAG;AACjC,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,aAAS,KAAK;AAAA,EAChB;AACA,WAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,QAAI,IAAI,SAAS,OAAO,CAAC;AACzB,QAAI,KAAK,EAAE,WAAW,CAAC;AACvB,QAAI,SAAS,QAAQ,KAAK;AACxB,YAAM,IAAI,UAAU,IAAI,eAAe;AAAA,IACzC;AACA,aAAS,MAAM;AAAA,EACjB;AACA,MAAI,OAAO,SAAS;AACpB,MAAI,SAAS,SAAS,OAAO,CAAC;AAC9B,MAAI,SAAS,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG;AAC1C,MAAI,UAAU,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,IAAI;AAC3C,WAASC,QAAO,QAAQ;AACtB,QAAI,kBAAkB;AAAW;AAAA,aACxB,YAAY,OAAO,MAAM,GAAG;AACnC,eAAS,IAAI,WAAW,OAAO,QAAQ,OAAO,YAAY,OAAO,UAAU;AAAA,IAC7E,WAAW,MAAM,QAAQ,MAAM,GAAG;AAChC,eAAS,WAAW,KAAK,MAAM;AAAA,IACjC;AACA,QAAI,EAAE,kBAAkB,aAAa;AACnC,YAAM,IAAI,UAAU,qBAAqB;AAAA,IAC3C;AACA,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO;AAAA,IACT;AACA,QAAI,SAAS;AACb,QAAIC,UAAS;AACb,QAAI,SAAS;AACb,QAAI,OAAO,OAAO;AAClB,WAAO,WAAW,QAAQ,OAAO,YAAY,GAAG;AAC9C;AACA;AAAA,IACF;AACA,QAAI,QAAQ,OAAO,UAAU,UAAU,MAAM;AAC7C,QAAI,MAAM,IAAI,WAAW,IAAI;AAC7B,WAAO,WAAW,MAAM;AACtB,UAAI,QAAQ,OAAO;AACnB,UAAIC,KAAI;AACR,eAAS,MAAM,OAAO,IAAI,UAAU,KAAKA,KAAID,YAAW,QAAQ,IAAI,OAAOC,MAAK;AAC9E,iBAAS,MAAM,IAAI,SAAS;AAC5B,YAAI,OAAO,QAAQ,SAAS;AAC5B,gBAAQ,QAAQ,SAAS;AAAA,MAC3B;AACA,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM,gBAAgB;AAAA,MAClC;AACA,MAAAD,UAASC;AACT;AAAA,IACF;AACA,QAAI,MAAM,OAAOD;AACjB,WAAO,QAAQ,QAAQ,IAAI,SAAS,GAAG;AACrC;AAAA,IACF;AACA,QAAI,MAAM,OAAO,OAAO,MAAM;AAC9B,WAAO,MAAM,MAAM,EAAE,KAAK;AACxB,aAAO,SAAS,OAAO,IAAI,IAAI;AAAA,IACjC;AACA,WAAO;AAAA,EACT;AACA,WAAS,aAAa,QAAQ;AAC5B,QAAI,OAAO,WAAW,UAAU;AAC9B,YAAM,IAAI,UAAU,iBAAiB;AAAA,IACvC;AACA,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO,IAAI,WAAW;AAAA,IACxB;AACA,QAAI,MAAM;AACV,QAAI,OAAO,SAAS,KAAK;AACvB;AAAA,IACF;AACA,QAAI,SAAS;AACb,QAAIA,UAAS;AACb,WAAO,OAAO,SAAS,QAAQ;AAC7B;AACA;AAAA,IACF;AACA,QAAI,QAAQ,OAAO,SAAS,OAAO,SAAS,MAAM;AAClD,QAAI,OAAO,IAAI,WAAW,IAAI;AAC9B,WAAO,OAAO,MAAM;AAClB,UAAI,QAAQ,SAAS,OAAO,WAAW,GAAG;AAC1C,UAAI,UAAU,KAAK;AACjB;AAAA,MACF;AACA,UAAIC,KAAI;AACR,eAAS,MAAM,OAAO,IAAI,UAAU,KAAKA,KAAID,YAAW,QAAQ,IAAI,OAAOC,MAAK;AAC9E,iBAAS,OAAO,KAAK,SAAS;AAC9B,aAAK,OAAO,QAAQ,QAAQ;AAC5B,gBAAQ,QAAQ,QAAQ;AAAA,MAC1B;AACA,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM,gBAAgB;AAAA,MAClC;AACA,MAAAD,UAASC;AACT;AAAA,IACF;AACA,QAAI,OAAO,SAAS,KAAK;AACvB;AAAA,IACF;AACA,QAAI,MAAM,OAAOD;AACjB,WAAO,QAAQ,QAAQ,KAAK,SAAS,GAAG;AACtC;AAAA,IACF;AACA,QAAI,MAAM,IAAI,WAAW,UAAU,OAAO,IAAI;AAC9C,QAAIE,KAAI;AACR,WAAO,QAAQ,MAAM;AACnB,UAAIA,QAAO,KAAK;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AACA,WAASC,QAAOC,SAAQ;AACtB,QAAI,SAAS,aAAaA,OAAM;AAChC,QAAI,QAAQ;AACV,aAAO;AAAA,IACT;AACA,UAAM,IAAI,MAAM,OAAQN,iBAAiB;AAAA,EAC3C;AACA,SAAO;AAAA,IACL,QAAQC;AAAA,IACR;AAAA,IACA,QAAQI;AAAA,EACV;AACF;AACA,IAAI,MAAM;AACV,IAAI,kCAAkC;AACtC,IAAO,iBAAQ;;;ACpIf,IAAM,QAAQ,IAAI,WAAW,CAAC;AAM9B,IAAM,SAAS,CAAC,IAAI,OAAO;AACzB,MAAI,OAAO;AACT,WAAO;AACT,MAAI,GAAG,eAAe,GAAG,YAAY;AACnC,WAAO;AAAA,EACT;AACA,WAAS,KAAK,GAAG,KAAK,GAAG,YAAY,MAAM;AACzC,QAAI,GAAG,QAAQ,GAAG,KAAK;AACrB,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAM,SAAS,OAAK;AAClB,MAAI,aAAa,cAAc,EAAE,YAAY,SAAS;AACpD,WAAO;AACT,MAAI,aAAa;AACf,WAAO,IAAI,WAAW,CAAC;AACzB,MAAI,YAAY,OAAO,CAAC,GAAG;AACzB,WAAO,IAAI,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU;AAAA,EAC5D;AACA,QAAM,IAAI,MAAM,mCAAmC;AACrD;AAEA,IAAM,aAAa,SAAO,IAAI,YAAY,EAAE,OAAO,GAAG;AACtD,IAAM,WAAW,OAAK,IAAI,YAAY,EAAE,OAAO,CAAC;;;AC7BhD,IAAM,UAAN,MAAc;AAAA,EACZ,YAAYE,OAAM,QAAQ,YAAY;AACpC,SAAK,OAAOA;AACZ,SAAK,SAAS;AACd,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,OAAO,OAAO;AACZ,QAAI,iBAAiB,YAAY;AAC/B,aAAO,GAAI,KAAK,SAAW,KAAK,WAAW,KAAK;AAAA,IAClD,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AACF;AACA,IAAM,UAAN,MAAc;AAAA,EACZ,YAAYA,OAAM,QAAQ,YAAY;AACpC,SAAK,OAAOA;AACZ,SAAK,SAAS;AACd,QAAI,OAAO,YAAY,CAAC,MAAM,QAAW;AACvC,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AACA,SAAK,kBAAkB,OAAO,YAAY,CAAC;AAC3C,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,OAAO,MAAM;AACX,QAAI,OAAO,SAAS,UAAU;AAC5B,UAAI,KAAK,YAAY,CAAC,MAAM,KAAK,iBAAiB;AAChD,cAAM,MAAM,qCAAsC,KAAK,UAAU,IAAI,MAAQ,KAAK,mDAAqD,KAAK,QAAS;AAAA,MACvJ;AACA,aAAO,KAAK,WAAW,KAAK,MAAM,KAAK,OAAO,MAAM,CAAC;AAAA,IACvD,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AAAA,EACA,GAAG,SAAS;AACV,WAAO,GAAG,MAAM,OAAO;AAAA,EACzB;AACF;AACA,IAAM,kBAAN,MAAsB;AAAA,EACpB,YAAY,UAAU;AACpB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,GAAG,SAAS;AACV,WAAO,GAAG,MAAM,OAAO;AAAA,EACzB;AAAA,EACA,OAAO,OAAO;AACZ,UAAM,SAAS,MAAM;AACrB,UAAM,UAAU,KAAK,SAAS;AAC9B,QAAI,SAAS;AACX,aAAO,QAAQ,OAAO,KAAK;AAAA,IAC7B,OAAO;AACL,YAAM,WAAW,qCAAsC,KAAK,UAAU,KAAK,gCAAkC,OAAO,KAAK,KAAK,QAAQ,iBAAkB;AAAA,IAC1J;AAAA,EACF;AACF;AACO,IAAM,KAAK,CAAC,MAAM,UAAU,IAAI,gBAAgB,kCAClD,KAAK,YAAY,EAAE,CAAC,KAAK,SAAS,KAAK,IACvC,MAAM,YAAY,EAAE,CAAC,MAAM,SAAS,MAAM,EAC9C;AACM,IAAM,QAAN,MAAY;AAAA,EACjB,YAAYA,OAAM,QAAQ,YAAY,YAAY;AAChD,SAAK,OAAOA;AACZ,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,aAAa;AAClB,SAAK,UAAU,IAAI,QAAQA,OAAM,QAAQ,UAAU;AACnD,SAAK,UAAU,IAAI,QAAQA,OAAM,QAAQ,UAAU;AAAA,EACrD;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,EAClC;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,KAAK,QAAQ,OAAO,KAAK;AAAA,EAClC;AACF;AACO,IAAM,OAAO,CAAC,EAAC,MAAAA,OAAM,QAAQ,QAAAC,SAAQ,QAAAC,QAAM,MAAM,IAAI,MAAMF,OAAM,QAAQC,SAAQC,OAAM;AACvF,IAAM,QAAQ,CAAC,EAAC,QAAQ,MAAAF,OAAM,UAAAG,UAAQ,MAAM;AACjD,QAAM,EAAC,QAAAF,SAAQ,QAAAC,QAAM,IAAI,eAAMC,WAAUH,KAAI;AAC7C,SAAO,KAAK;AAAA,IACV;AAAA,IACA,MAAAA;AAAA,IACA,QAAAC;AAAA,IACA,QAAQ,UAAQ,OAAOC,QAAO,IAAI,CAAC;AAAA,EACrC,CAAC;AACH;AACA,IAAM,SAAS,CAACE,SAAQD,WAAU,aAAaH,UAAS;AACtD,QAAM,QAAQ,CAAC;AACf,WAAS,IAAI,GAAG,IAAIG,UAAS,QAAQ,EAAE,GAAG;AACxC,UAAMA,UAAS,MAAM;AAAA,EACvB;AACA,MAAI,MAAMC,QAAO;AACjB,SAAOA,QAAO,MAAM,OAAO,KAAK;AAC9B,MAAE;AAAA,EACJ;AACA,QAAM,MAAM,IAAI,WAAW,MAAM,cAAc,IAAI,CAAC;AACpD,MAAI,OAAO;AACX,MAAI,SAAS;AACb,MAAI,UAAU;AACd,WAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,UAAM,QAAQ,MAAMA,QAAO;AAC3B,QAAI,UAAU,QAAW;AACvB,YAAM,IAAI,YAAY,OAAQJ,iBAAiB;AAAA,IACjD;AACA,aAAS,UAAU,cAAc;AACjC,YAAQ;AACR,QAAI,QAAQ,GAAG;AACb,cAAQ;AACR,UAAI,aAAa,MAAM,UAAU;AAAA,IACnC;AAAA,EACF;AACA,MAAI,QAAQ,eAAe,MAAM,UAAU,IAAI,MAAM;AACnD,UAAM,IAAI,YAAY,wBAAwB;AAAA,EAChD;AACA,SAAO;AACT;AACA,IAAM,SAAS,CAAC,MAAMG,WAAU,gBAAgB;AAC9C,QAAM,MAAMA,UAASA,UAAS,SAAS,OAAO;AAC9C,QAAM,QAAQ,KAAK,eAAe;AAClC,MAAI,MAAM;AACV,MAAI,OAAO;AACX,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,aAAS,UAAU,IAAI,KAAK;AAC5B,YAAQ;AACR,WAAO,OAAO,aAAa;AACzB,cAAQ;AACR,aAAOA,UAAS,OAAO,UAAU;AAAA,IACnC;AAAA,EACF;AACA,MAAI,MAAM;AACR,WAAOA,UAAS,OAAO,UAAU,cAAc;AAAA,EACjD;AACA,MAAI,KAAK;AACP,WAAO,IAAI,SAAS,cAAc,GAAG;AACnC,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AACO,IAAM,UAAU,CAAC,EAAC,MAAAH,OAAM,QAAQ,aAAa,UAAAG,UAAQ,MAAM;AAChE,SAAO,KAAK;AAAA,IACV;AAAA,IACA,MAAAH;AAAA,IACA,OAAO,OAAO;AACZ,aAAO,OAAO,OAAOG,WAAU,WAAW;AAAA,IAC5C;AAAA,IACA,OAAO,OAAO;AACZ,aAAO,OAAO,OAAOA,WAAU,aAAaH,KAAI;AAAA,IAClD;AAAA,EACF,CAAC;AACH;;;AHnJO,IAAM,WAAW,KAAK;AAAA,EAC3B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAQ,SAAO,SAAS,GAAG;AAAA,EAC3B,QAAQ,SAAO,WAAW,GAAG;AAC/B,CAAC;;;AIVD;AAAA;AAAA;AAAA;AACO,IAAM,QAAQ,QAAQ;AAAA,EAC3B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACND;AAAA;AAAA;AAAA;AACO,IAAM,QAAQ,QAAQ;AAAA,EAC3B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACND;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,MAAM;AAAA,EAC1B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ,CAAC;;;ACLD;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,QAAQ;AAAA,EAC5B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,cAAc,QAAQ;AAAA,EACjC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,QAAQ;AAAA,EAC5B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,cAAc,QAAQ;AAAA,EACjC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,iBAAiB,QAAQ;AAAA,EACpC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,iBAAiB,QAAQ;AAAA,EACpC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,eAAe,QAAQ;AAAA,EAClC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,oBAAoB,QAAQ;AAAA,EACvC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,UAAU,QAAQ;AAAA,EAC7B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACtDD;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,MAAM;AAAA,EAC1B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ,CAAC;AACM,IAAM,cAAc,MAAM;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AACZ,CAAC;;;ACVD;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,YAAY,MAAM;AAAA,EAC7B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AACZ,CAAC;AACM,IAAM,eAAe,MAAM;AAAA,EAChC,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AACZ,CAAC;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,SAAS,QAAQ;AAAA,EAC5B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,YAAY,QAAQ;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;AACM,IAAM,eAAe,QAAQ;AAAA,EAClC,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,UAAU;AAAA,EACV,aAAa;AACf,CAAC;;;ACxBD;AAAA;AAAA;AAAA;AACA,IAAM,WAAW,MAAM,KAAK,orEAAs2F;AACl4F,IAAM,uBAAuB,SAAS,OAAO,CAAC,GAAG,GAAG,MAAM;AACxD,IAAE,KAAK;AACP,SAAO;AACT,GAAG,CAAC,CAAC;AACL,IAAM,uBAAuB,SAAS,OAAO,CAAC,GAAG,GAAG,MAAM;AACxD,IAAE,EAAE,YAAY,CAAC,KAAK;AACtB,SAAO;AACT,GAAG,CAAC,CAAC;AACL,SAASK,QAAO,MAAM;AACpB,SAAO,KAAK,OAAO,CAAC,GAAG,MAAM;AAC3B,SAAK,qBAAqB;AAC1B,WAAO;AAAA,EACT,GAAG,EAAE;AACP;AACA,SAASC,QAAO,KAAK;AACnB,QAAM,OAAO,CAAC;AACd,aAAW,QAAQ,KAAK;AACtB,UAAM,MAAM,qBAAqB,KAAK,YAAY,CAAC;AACnD,QAAI,QAAQ,QAAW;AACrB,YAAM,IAAI,MAAM,+BAAgC,MAAO;AAAA,IACzD;AACA,SAAK,KAAK,GAAG;AAAA,EACf;AACA,SAAO,IAAI,WAAW,IAAI;AAC5B;AACO,IAAM,eAAe,KAAK;AAAA,EAC/B,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,QAAAD;AAAA,EACA,QAAAC;AACF,CAAC;;;AChCD;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAI,WAAWC;AACf,IAAI,MAAM;AAAV,IAAe,OAAO;AAAtB,IAA2B,SAAS,CAAC;AAArC,IAA2C,MAAM,KAAK,IAAI,GAAG,EAAE;AAC/D,SAASA,QAAO,KAAK,KAAK,QAAQ;AAChC,QAAM,OAAO,CAAC;AACd,WAAS,UAAU;AACnB,MAAI,YAAY;AAChB,SAAO,OAAO,KAAK;AACjB,QAAI,YAAY,MAAM,MAAM;AAC5B,WAAO;AAAA,EACT;AACA,SAAO,MAAM,QAAQ;AACnB,QAAI,YAAY,MAAM,MAAM;AAC5B,aAAS;AAAA,EACX;AACA,MAAI,UAAU,MAAM;AACpB,EAAAA,QAAO,QAAQ,SAAS,YAAY;AACpC,SAAO;AACT;AACA,IAAIC,UAAS;AACb,IAAI,QAAQ;AAAZ,IAAiB,SAAS;AAC1B,SAAS,KAAK,KAAK,QAAQ;AACzB,MAAI,MAAM,GAAG,SAAS,UAAU,GAAG,QAAQ,GAAG,UAAU,QAAQ,GAAG,IAAI,IAAI;AAC3E,KAAG;AACD,QAAI,WAAW,GAAG;AAChB,WAAK,QAAQ;AACb,YAAM,IAAI,WAAW,yBAAyB;AAAA,IAChD;AACA,QAAI,IAAI;AACR,WAAO,QAAQ,MAAM,IAAI,WAAW,SAAS,IAAI,UAAU,KAAK,IAAI,GAAG,KAAK;AAC5E,aAAS;AAAA,EACX,SAAS,KAAK;AACd,OAAK,QAAQ,UAAU;AACvB,SAAO;AACT;AACA,IAAI,KAAK,KAAK,IAAI,GAAG,CAAC;AACtB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,KAAK,KAAK,IAAI,GAAG,EAAE;AACvB,IAAI,SAAS,SAAU,OAAO;AAC5B,SAAO,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,IAAI;AAClK;AACA,IAAI,SAAS;AAAA,EACX,QAAQ;AAAA,EACR,QAAQA;AAAA,EACR,gBAAgB;AAClB;AACA,IAAI,eAAe;AACnB,IAAO,iBAAQ;;;ACnDR,IAAMC,UAAS,CAAC,MAAM,SAAS,MAAM;AAC1C,QAAMC,QAAO,eAAO,OAAO,MAAM,MAAM;AACvC,SAAO;AAAA,IACLA;AAAA,IACA,eAAO,OAAO;AAAA,EAChB;AACF;AACO,IAAM,WAAW,CAAC,KAAK,QAAQ,SAAS,MAAM;AACnD,iBAAO,OAAO,KAAK,QAAQ,MAAM;AACjC,SAAO;AACT;AACO,IAAM,iBAAiB,SAAO;AACnC,SAAO,eAAO,eAAe,GAAG;AAClC;;;ACTO,IAAM,SAAS,CAACC,OAAMC,YAAW;AACtC,QAAM,OAAOA,QAAO;AACpB,QAAM,aAAoB,eAAeD,KAAI;AAC7C,QAAM,eAAe,aAAoB,eAAe,IAAI;AAC5D,QAAM,QAAQ,IAAI,WAAW,eAAe,IAAI;AAChD,EAAO,SAASA,OAAM,OAAO,CAAC;AAC9B,EAAO,SAAS,MAAM,OAAO,UAAU;AACvC,QAAM,IAAIC,SAAQ,YAAY;AAC9B,SAAO,IAAI,OAAOD,OAAM,MAAMC,SAAQ,KAAK;AAC7C;AACO,IAAMC,UAAS,eAAa;AACjC,QAAM,QAAQ,OAAO,SAAS;AAC9B,QAAM,CAACF,OAAM,UAAU,IAAWE,QAAO,KAAK;AAC9C,QAAM,CAAC,MAAM,YAAY,IAAWA,QAAO,MAAM,SAAS,UAAU,CAAC;AACrE,QAAMD,UAAS,MAAM,SAAS,aAAa,YAAY;AACvD,MAAIA,QAAO,eAAe,MAAM;AAC9B,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACpC;AACA,SAAO,IAAI,OAAOD,OAAM,MAAMC,SAAQ,KAAK;AAC7C;AACO,IAAME,UAAS,CAAC,GAAG,MAAM;AAC9B,MAAI,MAAM,GAAG;AACX,WAAO;AAAA,EACT,OAAO;AACL,WAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,OAAW,EAAE,OAAO,EAAE,KAAK;AAAA,EAC9E;AACF;AACO,IAAM,SAAN,MAAa;AAAA,EAClB,YAAYH,OAAM,MAAMC,SAAQ,OAAO;AACrC,SAAK,OAAOD;AACZ,SAAK,OAAO;AACZ,SAAK,SAASC;AACd,SAAK,QAAQ;AAAA,EACf;AACF;;;ACtCO,IAAMG,QAAO,CAAC,EAAC,MAAAC,OAAM,MAAAC,OAAM,QAAAC,QAAM,MAAM,IAAI,OAAOF,OAAMC,OAAMC,OAAM;AACpE,IAAM,SAAN,MAAa;AAAA,EAClB,YAAYF,OAAMC,OAAMC,SAAQ;AAC9B,SAAK,OAAOF;AACZ,SAAK,OAAOC;AACZ,SAAK,SAASC;AAAA,EAChB;AAAA,EACA,OAAO,OAAO;AACZ,QAAI,iBAAiB,YAAY;AAC/B,YAAM,SAAS,KAAK,OAAO,KAAK;AAChC,aAAO,kBAAkB,aAAoB,OAAO,KAAK,MAAM,MAAM,IAAI,OAAO,KAAK,CAAAC,YAAiB,OAAO,KAAK,MAAMA,OAAM,CAAC;AAAA,IACjI,OAAO;AACL,YAAM,MAAM,mCAAmC;AAAA,IACjD;AAAA,EACF;AACF;;;AJfA,IAAM,MAAM,CAAAC,UAAQ,OAAM,SAAQ,IAAI,WAAW,MAAM,OAAO,OAAO,OAAOA,OAAM,IAAI,CAAC;AAChF,IAAM,SAASC,MAAK;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,IAAI,SAAS;AACvB,CAAC;AACM,IAAM,SAASA,MAAK;AAAA,EACzB,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ,IAAI,SAAS;AACvB,CAAC;;;AKXD,IAAAC,oBAAA;AAAA,SAAAA,mBAAA;AAAA,kBAAAC;AAAA;AAEA,IAAM,OAAO;AACb,IAAM,OAAO;AACb,IAAMC,UAAS;AACf,IAAM,SAAS,WAAgB,OAAO,MAAMA,QAAO,KAAK,CAAC;AAClD,IAAMC,YAAW;AAAA,EACtB;AAAA,EACA;AAAA,EACA,QAAAD;AAAA,EACA;AACF;;;ACXA,IAAM,cAAc,IAAI,YAAY;AACpC,IAAM,cAAc,IAAI,YAAY;;;ACI7B,IAAM,MAAN,MAAU;AAAA,EACf,YAAYE,UAASC,OAAM,WAAW,OAAO;AAC3C,SAAK,OAAOA;AACZ,SAAK,UAAUD;AACf,SAAK,YAAY;AACjB,SAAK,QAAQ;AACb,SAAK,aAAa,MAAM;AACxB,SAAK,aAAa,MAAM;AACxB,SAAK,QAAQ;AACb,SAAK,aAAa,oBAAI,IAAI;AAC1B,WAAO,iBAAiB,MAAM;AAAA,MAC5B,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,OAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,YAAQ,KAAK;AAAA,WACR,GAAG;AACJ,eAAO;AAAA,MACT;AAAA,eACO;AACL,cAAM,EAAC,MAAAC,OAAM,UAAS,IAAI;AAC1B,YAAIA,UAAS,aAAa;AACxB,gBAAM,IAAI,MAAM,0CAA0C;AAAA,QAC5D;AACA,YAAI,UAAU,SAAS,cAAc;AACnC,gBAAM,IAAI,MAAM,oDAAoD;AAAA,QACtE;AACA,eAAO,IAAI,SAAS,SAAS;AAAA,MAC/B;AAAA;AAAA,EAEJ;AAAA,EACA,OAAO;AACL,YAAQ,KAAK;AAAA,WACR,GAAG;AACJ,cAAM,EAAC,MAAAA,OAAM,QAAAC,QAAM,IAAI,KAAK;AAC5B,cAAM,YAAmB,OAAOD,OAAMC,OAAM;AAC5C,eAAO,IAAI,SAAS,KAAK,MAAM,SAAS;AAAA,MAC1C;AAAA,WACG,GAAG;AACJ,eAAO;AAAA,MACT;AAAA,eACO;AACL,cAAM,MAAM,+BAAgC,KAAK,mDAAoD;AAAA,MACvG;AAAA;AAAA,EAEJ;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,SAAS,KAAK,SAAS,MAAM,QAAQ,KAAK,YAAY,MAAM,WAAkBC,QAAO,KAAK,WAAW,MAAM,SAAS;AAAA,EAC7H;AAAA,EACA,SAASC,OAAM;AACb,UAAM,EAAC,OAAO,SAAAJ,UAAS,WAAU,IAAI;AACrC,YAAQA;AAAA,WACH;AACH,eAAO,WAAW,OAAO,YAAYI,SAAQ,UAAU,OAAO;AAAA;AAE9D,eAAO,WAAW,OAAO,YAAYA,SAAQ,OAAO,OAAO;AAAA;AAAA,EAE/D;AAAA,EACA,SAAS;AACP,WAAO;AAAA,MACL,MAAM,KAAK;AAAA,MACX,SAAS,KAAK;AAAA,MACd,MAAM,KAAK,UAAU;AAAA,IACvB;AAAA,EACF;AAAA,EACA,KAAK,OAAO,eAAe;AACzB,WAAO;AAAA,EACT;AAAA,EACA,CAAC,OAAO,IAAI,4BAA4B,KAAK;AAC3C,WAAO,SAAS,KAAK,SAAS,IAAI;AAAA,EACpC;AAAA,EACA,OAAO,MAAM,OAAO;AAClB,cAAU,SAAS,kBAAkB;AACrC,WAAO,CAAC,EAAE,UAAU,MAAM,cAAc,MAAM,UAAU;AAAA,EAC1D;AAAA,EACA,IAAI,sBAAsB;AACxB,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAC/C;AAAA,EACA,IAAI,QAAQ;AACV,UAAM,IAAI,MAAM,qEAAqE;AAAA,EACvF;AAAA,EACA,IAAI,SAAS;AACX,UAAM,IAAI,MAAM,mEAAmE;AAAA,EACrF;AAAA,EACA,IAAI,gBAAgB;AAClB,UAAM,IAAI,MAAM,wCAAwC;AAAA,EAC1D;AAAA,EACA,IAAI,SAAS;AACX,UAAM,IAAI,MAAM,iCAAiC;AAAA,EACnD;AAAA,EACA,OAAO,MAAM,OAAO;AAClB,QAAI,iBAAiB,KAAK;AACxB,aAAO;AAAA,IACT,WAAW,SAAS,QAAQ,MAAM,UAAU,OAAO;AACjD,YAAM,EAAC,SAAAJ,UAAS,MAAAC,OAAM,WAAW,MAAK,IAAI;AAC1C,aAAO,IAAI,IAAID,UAASC,OAAM,WAAW,SAAS,UAAUD,UAASC,OAAM,UAAU,KAAK,CAAC;AAAA,IAC7F,WAAW,SAAS,QAAQ,MAAM,eAAe,MAAM;AACrD,YAAM,EAAC,SAAAD,UAAS,WAAW,MAAAC,MAAI,IAAI;AACnC,YAAMC,UAAgBG,QAAO,SAAS;AACtC,aAAO,IAAI,OAAOL,UAASC,OAAMC,OAAM;AAAA,IACzC,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EACA,OAAO,OAAOF,UAASC,OAAMC,SAAQ;AACnC,QAAI,OAAOD,UAAS,UAAU;AAC5B,YAAM,IAAI,MAAM,uCAAuC;AAAA,IACzD;AACA,YAAQD;AAAA,WACH,GAAG;AACJ,YAAIC,UAAS,aAAa;AACxB,gBAAM,IAAI,MAAM,wCAAyC,6BAA8B;AAAA,QACzF,OAAO;AACL,iBAAO,IAAI,IAAID,UAASC,OAAMC,SAAQA,QAAO,KAAK;AAAA,QACpD;AAAA,MACF;AAAA,WACG,GAAG;AACJ,cAAM,QAAQ,UAAUF,UAASC,OAAMC,QAAO,KAAK;AACnD,eAAO,IAAI,IAAIF,UAASC,OAAMC,SAAQ,KAAK;AAAA,MAC7C;AAAA,eACO;AACL,cAAM,IAAI,MAAM,iBAAiB;AAAA,MACnC;AAAA;AAAA,EAEJ;AAAA,EACA,OAAO,SAASA,SAAQ;AACtB,WAAO,IAAI,OAAO,GAAG,aAAaA,OAAM;AAAA,EAC1C;AAAA,EACA,OAAO,SAASD,OAAMC,SAAQ;AAC5B,WAAO,IAAI,OAAO,GAAGD,OAAMC,OAAM;AAAA,EACnC;AAAA,EACA,OAAO,OAAO,OAAO;AACnB,UAAM,CAAC,KAAK,SAAS,IAAI,IAAI,YAAY,KAAK;AAC9C,QAAI,UAAU,QAAQ;AACpB,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACpC;AACA,WAAO;AAAA,EACT;AAAA,EACA,OAAO,YAAY,OAAO;AACxB,UAAM,QAAQ,IAAI,aAAa,KAAK;AACpC,UAAM,aAAa,MAAM,OAAO,MAAM;AACtC,UAAM,iBAAiB,OAAO,MAAM,SAAS,YAAY,aAAa,MAAM,aAAa,CAAC;AAC1F,QAAI,eAAe,eAAe,MAAM,eAAe;AACrD,YAAM,IAAI,MAAM,kBAAkB;AAAA,IACpC;AACA,UAAM,cAAc,eAAe,SAAS,MAAM,gBAAgB,MAAM,UAAU;AAClF,UAAMA,UAAS,IAAW,OAAO,MAAM,eAAe,MAAM,YAAY,aAAa,cAAc;AACnG,UAAM,MAAM,MAAM,YAAY,IAAI,IAAI,SAASA,OAAM,IAAI,IAAI,SAAS,MAAM,OAAOA,OAAM;AACzF,WAAO;AAAA,MACL;AAAA,MACA,MAAM,SAAS,MAAM,IAAI;AAAA,IAC3B;AAAA,EACF;AAAA,EACA,OAAO,aAAa,cAAc;AAChC,QAAI,SAAS;AACb,UAAM,OAAO,MAAM;AACjB,YAAM,CAAC,GAAGI,OAAM,IAAWD,QAAO,aAAa,SAAS,MAAM,CAAC;AAC/D,gBAAUC;AACV,aAAO;AAAA,IACT;AACA,QAAIN,WAAU,KAAK;AACnB,QAAI,QAAQ;AACZ,QAAIA,aAAY,IAAI;AAClB,MAAAA,WAAU;AACV,eAAS;AAAA,IACX,WAAWA,aAAY,GAAG;AACxB,cAAQ,KAAK;AAAA,IACf;AACA,QAAIA,aAAY,KAAKA,aAAY,GAAG;AAClC,YAAM,IAAI,WAAW,uBAAwBA,UAAU;AAAA,IACzD;AACA,UAAM,aAAa;AACnB,UAAM,gBAAgB,KAAK;AAC3B,UAAM,aAAa,KAAK;AACxB,UAAM,OAAO,SAAS;AACtB,UAAM,gBAAgB,OAAO;AAC7B,WAAO;AAAA,MACL,SAAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EACA,OAAO,MAAM,QAAQI,OAAM;AACzB,UAAM,CAAC,QAAQ,KAAK,IAAI,gBAAgB,QAAQA,KAAI;AACpD,UAAM,MAAM,IAAI,OAAO,KAAK;AAC5B,QAAI,WAAW,IAAI,QAAQ,MAAM;AACjC,WAAO;AAAA,EACT;AACF;AACA,IAAM,kBAAkB,CAAC,QAAQA,UAAS;AACxC,UAAQ,OAAO;AAAA,SACV,KAAK;AACN,YAAM,UAAUA,SAAQ;AACxB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,QAAQ,OAAO,GAAI,UAAU,SAAW,QAAS;AAAA,MACnD;AAAA,IACF;AAAA,SACG,UAAU,QAAQ;AACnB,YAAM,UAAUA,SAAQ;AACxB,aAAO;AAAA,QACL,UAAU;AAAA,QACV,QAAQ,OAAO,MAAM;AAAA,MACvB;AAAA,IACF;AAAA,SACG,OAAO,QAAQ;AAChB,YAAM,UAAUA,SAAQ;AACxB,aAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ,OAAO,MAAM;AAAA,MACvB;AAAA,IACF;AAAA,aACO;AACL,UAAIA,SAAQ,MAAM;AAChB,cAAM,MAAM,iFAAiF;AAAA,MAC/F;AACA,aAAO;AAAA,QACL,OAAO;AAAA,QACPA,MAAK,OAAO,MAAM;AAAA,MACpB;AAAA,IACF;AAAA;AAEJ;AACA,IAAM,aAAa,CAAC,OAAO,OAAOA,UAAS;AACzC,QAAM,EAAC,OAAM,IAAIA;AACjB,MAAI,WAAW,UAAU,QAAQ;AAC/B,UAAM,MAAM,8BAA+BA,MAAK,eAAgB;AAAA,EAClE;AACA,QAAM,MAAM,MAAM,IAAI,MAAM;AAC5B,MAAI,OAAO,MAAM;AACf,UAAMG,OAAMH,MAAK,OAAO,KAAK,EAAE,MAAM,CAAC;AACtC,UAAM,IAAI,QAAQG,IAAG;AACrB,WAAOA;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AACA,IAAM,aAAa,CAAC,OAAO,OAAOH,UAAS;AACzC,QAAM,EAAC,OAAM,IAAIA;AACjB,QAAM,MAAM,MAAM,IAAI,MAAM;AAC5B,MAAI,OAAO,MAAM;AACf,UAAMG,OAAMH,MAAK,OAAO,KAAK;AAC7B,UAAM,IAAI,QAAQG,IAAG;AACrB,WAAOA;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AACA,IAAM,cAAc;AACpB,IAAM,eAAe;AACrB,IAAM,YAAY,CAACP,UAASC,OAAM,cAAc;AAC9C,QAAM,aAAoB,eAAeD,QAAO;AAChD,QAAM,aAAa,aAAoB,eAAeC,KAAI;AAC1D,QAAM,QAAQ,IAAI,WAAW,aAAa,UAAU,UAAU;AAC9D,EAAO,SAASD,UAAS,OAAO,CAAC;AACjC,EAAO,SAASC,OAAM,OAAO,UAAU;AACvC,QAAM,IAAI,WAAW,UAAU;AAC/B,SAAO;AACT;AACA,IAAM,YAAY,OAAO,IAAI,kBAAkB;AAC/C,IAAM,WAAW;AAAA,EACf,UAAU;AAAA,EACV,cAAc;AAAA,EACd,YAAY;AACd;AACA,IAAM,SAAS;AAAA,EACb,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,cAAc;AAChB;AACA,IAAM,UAAU;AAChB,IAAM,YAAY,CAAC,OAAO,YAAY;AACpC,MAAI,MAAM,KAAK,OAAO,GAAG;AACvB,YAAQ,KAAK,OAAO;AAAA,EACtB,OAAO;AACL,UAAM,IAAI,MAAM,OAAO;AAAA,EACzB;AACF;AACA,IAAM,qBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AChR3B,IAAM,QAAQ,0JACT,mBACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA;AAEL,IAAM,SAAS,kCACV,uBACAO;;;ACjCL,SAAS,YAAYC,OAAM,QAAQC,SAAQC,SAAQ;AACjD,SAAO;AAAA,IACL,MAAAF;AAAA,IACA;AAAA,IACA,SAAS;AAAA,MACP,MAAAA;AAAA,MACA;AAAA,MACA,QAAAC;AAAA,IACF;AAAA,IACA,SAAS,EAAE,QAAAC,QAAO;AAAA,EACpB;AACF;AACA,IAAM,SAAS,YAAY,QAAQ,KAAK,SAAO;AAC7C,QAAM,UAAU,IAAI,YAAY,MAAM;AACtC,SAAO,MAAM,QAAQ,OAAO,GAAG;AACjC,GAAG,SAAO;AACR,QAAM,UAAU,IAAI,YAAY;AAChC,SAAO,QAAQ,OAAO,IAAI,UAAU,CAAC,CAAC;AACxC,CAAC;AACD,IAAM,QAAQ,YAAY,SAAS,KAAK,SAAO;AAC7C,MAAIC,UAAS;AACb,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,IAAAA,WAAU,OAAO,aAAa,IAAI,EAAE;AAAA,EACtC;AACA,SAAOA;AACT,GAAG,SAAO;AACR,QAAM,IAAI,UAAU,CAAC;AACrB,QAAM,MAAM,YAAY,IAAI,MAAM;AAClC,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,QAAI,KAAK,IAAI,WAAW,CAAC;AAAA,EAC3B;AACA,SAAO;AACT,CAAC;AACD,IAAM,QAAQ;AAAA,EACZ,MAAM;AAAA,EACN,SAAS;AAAA,EACT,KAAK,MAAM;AAAA,EACX,QAAQ;AAAA,EACR;AAAA,EACA,QAAQ;AAAA,GACL;AAEL,IAAO,gBAAQ;;;AC1CR,SAASC,YAAWC,SAAQ,WAAW,QAAQ;AACpD,QAAMC,QAAO,cAAM;AACnB,MAAI,CAACA,OAAM;AACT,UAAM,IAAI,MAAM,yBAA0B,WAAY;AAAA,EACxD;AACA,OAAK,aAAa,UAAU,aAAa,YAAY,WAAW,UAAU,QAAQ,WAAW,OAAO,QAAQ,MAAM;AAChH,WAAO,aAAa,WAAW,OAAO,KAAKD,SAAQ,OAAO,CAAC;AAAA,EAC7D;AACA,SAAOC,MAAK,QAAQ,OAAO,GAAIA,MAAK,SAAWD,SAAS;AAC1D;;;ACVO,SAASE,UAAS,OAAO,WAAW,QAAQ;AACjD,QAAMC,QAAO,cAAM;AACnB,MAAI,CAACA,OAAM;AACT,UAAM,IAAI,MAAM,yBAA0B,WAAY;AAAA,EACxD;AACA,OAAK,aAAa,UAAU,aAAa,YAAY,WAAW,UAAU,QAAQ,WAAW,OAAO,QAAQ,MAAM;AAChH,WAAO,WAAW,OAAO,KAAK,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU,EAAE,SAAS,MAAM;AAAA,EACjG;AACA,SAAOA,MAAK,QAAQ,OAAO,KAAK,EAAE,UAAU,CAAC;AAC/C;;;ACKO,SAAS,iBAAiB,GAAuB;AACtD,SAAWC,UAAS,GAAG,WAAW;AACpC;AAoCO,SAAS,cAAc,GAAuB;AACnD,SAAWC,YAAW,CAAC;AACzB;;;ACpDA,IAA8B,cAA9B,MAA4E;AAAA,EAK1E,YAAY,WAAuB,SAAkB,YAAqB;AACxE,SAAK,YAAY;AACjB,SAAK,UAAU;AACf,SAAK,aAAa;AAAA,EACpB;AAAA,EAEA,aAAa,WAAsB,aAAqB;AACtD,WAAmBC,UAAS,KAAK,WAAW,QAAQ;AAAA,EACtD;AAIF;;;ACfO,IAAM,YAAN,cAAwB,YAAY;AAAA,EAIzC,YAAY,WAAuB,WAAuB,YAAqB;AAC7E,UAAM,WAAW,WAAW,UAAU;AACtC,SAAK,YAAY;AACjB,SAAK,YAAY;AAAA,EACnB;AAAA,EAEA,aAAa,OAAO,QAAsD;AACxE,UAAM,EAAE,WAAW,IAAI,UAAU,CAAC;AAClC,UAAM,UAAkB,gBAAgB;AACxC,WAAO,IAAI,UAAU,QAAQ,WAAW,QAAQ,WAAW,kCAAc,KAAK;AAAA,EAChF;AAAA,EAEA,OAAO,cAAc,KAAa,QAAkE;AAClG,UAAM,EAAE,SAAS,aAAa,aAAa,MAAM,IAAI,UAAU,CAAC;AAChE,UAAM,YAAwBC,YAAW,KAAK,MAAM;AACpD,UAAM,YAAoB,8BAA8B,SAAS;AACjE,WAAO,IAAI,UAAU,WAAW,WAAW,UAAU;AAAA,EACvD;AAAA,EAEA,MAAM,KAAK,KAAsC;AAC/C,WAAe,KAAK,KAAK,WAAW,GAAG;AAAA,EACzC;AAAA,EAEA,MAAM,OAAO,SAAoB,aAA8B;AAC7D,QAAI,CAAC,KAAK,YAAY;AACpB,YAAM,IAAI,MAAM,uBAAuB;AAAA,IACzC;AACA,WAAmBC,UAAS,KAAK,WAAW,MAAM;AAAA,EACpD;AACF;;;AtC/BA,qBAAiB;AAgBjB,IAAM,gBAAgB;AACtB,IAAM,kBAAkB;AAEjB,IAAM,QAAN,MAAY;AAAA,EAKjB,YAAY,UAAkB;AAC5B,SAAK,YAAY,KAAK,UAAU,QAAQ;AAAA,EAC1C;AAAA,EAEQ,UAAU,UAAkB;AAClC,UAAM,UAAU,eAAAC,QAAK,UAAU,QAAQ;AACvC,UAAM,OAAO,IAAI,iBAAK,uBAAYC,YAAW,aAAa,CAAC;AAC3D,UAAM,YAAY,KAAK,OAAWA,YAAW,SAAS,KAAK,CAAC,EAAE,OAAO;AACrE,UAAM,KAAK,UAAU,MAAM,GAAG,EAAE;AAChC,UAAM,KAAK,UAAU,MAAM,EAAE;AAC7B,UAAM,MAAM;AACZ,UAAM,YAAY;AAClB,SAAK,OAAO;AAAA,MACV;AAAA,MACA;AAAA,IACF;AACA,WAAWC,UAAS,KAAK,KAAK,WAAW,WAAW;AAAA,EACtD;AAAA,EAEA,mBAA2B;AACzB,UAAM,iBAA6B,KAAK;AACxC,QAAI,eAAe,WAAW,IAAI;AAChC,YAAM,IAAI,MAAM,4DAA4D,eAAe,QAAQ;AAAA,IACrG;AACA,WAAO,OAAO,SAA+C;AAC3D,YAAM,YAAwB,OAAO,SAAS,WAAW,cAAc,IAAI,IAAI;AAC/E,YAAM,MAAkB,KAAK,gBAAgB,SAAS;AACtD,aAAO,iBAAiB,GAAG;AAAA,IAC7B;AAAA,EACF;AAAA,EAEA,gBAAgB,WAAiC;AAC/C,UAAM,MAAUA,UAAS,KAAK,KAAK,KAAK,WAAW;AACnD,UAAM,UAAU,eAAAF,QAAK,UAAU,IAAI,OAAO,SAAS,CAAC;AACpD,UAAM,OAAO,IAAI,iBAAK,uBAAYC,YAAW,aAAa,CAAC;AAC3D,UAAM,YAAY,KAAK,OAAWA,YAAW,SAAS,KAAK,CAAC,EAAE,OAAO;AACrE,SAAK,aAAa;AAClB,WAAa,UAAU,cAAkBC,UAAS,KAAK,YAAY,WAAW,CAAC;AAAA,EACjF;AAAA,EAEA,gBAAgB,WAAuC;AACrD,UAAM,YAAY,8BAA8B,aAAa,KAAK,UAAU;AAC5E,WAAO;AAAA,MACL,WAAeA,UAAS,WAAW,WAAW;AAAA,MAC9C,WAAeA,UAAS,aAAa,KAAK,YAAY,WAAW;AAAA,IACnE;AAAA,EACF;AAAA,EAEQ,kBAAkB,EAAE,KAAK,UAAU,GAAS,OAAqB;AACvE,UAAM,cAAc,IAAI,WAAW,CAAC;AACpC,QAAI,SAAS,YAAY,MAAM,EAAE,UAAU,GAAG,KAAK;AACnD,UAAM,OAAO,IAAI,WAAW,CAAC,GAAG,GAAG,KAAK,GAAG,WAAW,CAAC;AACvD,UAAMC,KAAI,IAAI,iBAAK,uBAAQ,SAAS,EAAE,OAAO,IAAI,EAAE,OAAO;AAC1D,UAAM,KAAKA,GAAE,MAAM,GAAG,EAAE;AACxB,UAAM,KAAKA,GAAE,MAAM,EAAE;AACrB,WAAO;AAAA,MACL,KAAK;AAAA,MACL,WAAW;AAAA,IACb;AAAA,EACF;AAAA,EAEA,YAAY,MAAuB;AACjC,QAAI,CAAC,UAAU,KAAK,IAAI,GAAG;AACzB,aAAO;AAAA,IACT;AACA,WAAO,CAAC,KAAK,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,IAAI,aAAa,EAAE,KAAK,KAAY;AAAA,EACvE;AAAA,EAEQ,eAAe,MAAY,SAAS,iBAAuB;AACjE,QAAI,CAAC,KAAK,YAAY,IAAI,GAAG;AAC3B,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC3C;AAEA,UAAM,EAAE,KAAK,UAAU,IAAI,KAAK;AAChC,UAAM,WAAW,KAAK,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,IAAI,aAAa,EAAE,IAAI,QAAM,SAAS,IAAI,EAAE,CAAC;AAEvF,WAAO,SAAS,OAAO,CAAC,YAAY,YAAY,KAAK,kBAAkB,YAAY,UAAU,MAAM,GAAG,EAAE,KAAK,UAAU,CAAC;AAAA,EAC1H;AAAA,EAEA,cAAc,MAAY,SAAS,iBAAkC;AACnE,UAAM,EAAE,KAAK,UAAU,IAAI,KAAK,eAAe,MAAM,MAAM;AAC3D,UAAM,YAAY,IAAI,WAAW,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;AACvD,WAAa,UAAU,cAAkBD,UAAS,WAAW,WAAW,CAAC;AAAA,EAC3E;AAAA,EAEA,cAAc,MAAY,SAAS,iBAAgC;AACjE,UAAM,EAAE,KAAK,UAAU,IAAI,KAAK,eAAe,MAAM,MAAM;AAC3D,UAAM,YAAY,IAAI,WAAW,CAAC,GAAG,KAAK,GAAG,SAAS,CAAC;AACvD,UAAM,YAAY,8BAA8B,SAAS;AACzD,WAAO;AAAA,MACL,WAAeA,UAAS,WAAW,WAAW;AAAA,MAC9C,WAAeA,UAAS,WAAW,WAAW;AAAA,IAChD;AAAA,EACF;AACF;",
  "names": ["compare", "wipe", "HMAC", "hash", "digest", "add", "sub", "readUint32BE", "readUint32LE", "writeUint32BE", "mul", "SHA512", "hashBlocks", "K", "hash", "digest", "bits", "createMethod", "i", "length", "code", "j", "import_sha512", "length", "length", "digest", "name", "encode", "length", "i", "j", "decode", "string", "name", "encode", "decode", "alphabet", "string", "encode", "decode", "encode", "decode", "decode", "code", "code", "digest", "decode", "equals", "from", "name", "code", "encode", "digest", "name", "from", "identity_exports", "identity", "encode", "identity", "version", "code", "digest", "equals", "base", "decode", "length", "cid", "identity_exports", "name", "encode", "decode", "string", "fromString", "string", "base", "toString", "base", "toString", "fromString", "toString", "fromString", "toString", "sha3", "fromString", "toString", "I"]
}
